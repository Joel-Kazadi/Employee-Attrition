2024-05-01 18:17:38,513:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 18:17:38,513:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 18:17:38,513:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 18:17:38,513:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 18:17:40,093:INFO:PyCaret ClassificationExperiment
2024-05-01 18:17:40,093:INFO:Logging name: clf-default-name
2024-05-01 18:17:40,094:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-01 18:17:40,094:INFO:version 3.3.1
2024-05-01 18:17:40,094:INFO:Initializing setup()
2024-05-01 18:17:40,094:INFO:self.USI: 3dde
2024-05-01 18:17:40,094:INFO:self._variable_keys: {'X_test', 'y_train', 'data', '_available_plots', 'target_param', 'pipeline', 'log_plots_param', 'fix_imbalance', 'fold_shuffle_param', 'is_multiclass', 'X', 'logging_param', 'exp_id', 'fold_groups_param', 'idx', 'USI', 'fold_generator', 'n_jobs_param', 'X_train', 'gpu_param', 'gpu_n_jobs_param', '_ml_usecase', 'exp_name_log', 'seed', 'y_test', 'html_param', 'memory', 'y'}
2024-05-01 18:17:40,094:INFO:Checking environment
2024-05-01 18:17:40,094:INFO:python_version: 3.9.13
2024-05-01 18:17:40,094:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2024-05-01 18:17:40,094:INFO:machine: AMD64
2024-05-01 18:17:40,094:INFO:platform: Windows-10-10.0.19045-SP0
2024-05-01 18:17:40,094:INFO:Memory: svmem(total=8246136832, available=645505024, percent=92.2, used=7600631808, free=645505024)
2024-05-01 18:17:40,094:INFO:Physical Core: 10
2024-05-01 18:17:40,094:INFO:Logical Core: 12
2024-05-01 18:17:40,094:INFO:Checking libraries
2024-05-01 18:17:40,094:INFO:System:
2024-05-01 18:17:40,094:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2024-05-01 18:17:40,094:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2024-05-01 18:17:40,094:INFO:   machine: Windows-10-10.0.19045-SP0
2024-05-01 18:17:40,094:INFO:PyCaret required dependencies:
2024-05-01 18:17:40,670:INFO:                 pip: 22.2.2
2024-05-01 18:17:40,670:INFO:          setuptools: 63.4.1
2024-05-01 18:17:40,670:INFO:             pycaret: 3.3.1
2024-05-01 18:17:40,670:INFO:             IPython: 7.31.1
2024-05-01 18:17:40,670:INFO:          ipywidgets: 7.6.5
2024-05-01 18:17:40,670:INFO:                tqdm: 4.64.1
2024-05-01 18:17:40,670:INFO:               numpy: 1.21.5
2024-05-01 18:17:40,670:INFO:              pandas: 1.4.4
2024-05-01 18:17:40,670:INFO:              jinja2: 2.11.3
2024-05-01 18:17:40,670:INFO:               scipy: 1.9.1
2024-05-01 18:17:40,670:INFO:              joblib: 1.1.0
2024-05-01 18:17:40,670:INFO:             sklearn: 1.0.2
2024-05-01 18:17:40,671:INFO:                pyod: 1.1.3
2024-05-01 18:17:40,671:INFO:            imblearn: 0.12.2
2024-05-01 18:17:40,671:INFO:   category_encoders: 2.6.3
2024-05-01 18:17:40,671:INFO:            lightgbm: 4.3.0
2024-05-01 18:17:40,671:INFO:               numba: 0.55.1
2024-05-01 18:17:40,671:INFO:            requests: 2.28.1
2024-05-01 18:17:40,671:INFO:          matplotlib: 3.5.2
2024-05-01 18:17:40,671:INFO:          scikitplot: 0.3.7
2024-05-01 18:17:40,671:INFO:         yellowbrick: 1.5
2024-05-01 18:17:40,671:INFO:              plotly: 5.9.0
2024-05-01 18:17:40,671:INFO:    plotly-resampler: Not installed
2024-05-01 18:17:40,671:INFO:             kaleido: 0.2.1
2024-05-01 18:17:40,671:INFO:           schemdraw: 0.15
2024-05-01 18:17:40,671:INFO:         statsmodels: 0.13.2
2024-05-01 18:17:40,671:INFO:              sktime: 0.26.0
2024-05-01 18:17:40,671:INFO:               tbats: 1.1.3
2024-05-01 18:17:40,671:INFO:            pmdarima: 2.0.4
2024-05-01 18:17:40,671:INFO:              psutil: 5.9.0
2024-05-01 18:17:40,671:INFO:          markupsafe: 2.0.1
2024-05-01 18:17:40,672:INFO:             pickle5: Not installed
2024-05-01 18:17:40,672:INFO:         cloudpickle: 2.0.0
2024-05-01 18:17:40,672:INFO:         deprecation: 2.1.0
2024-05-01 18:17:40,672:INFO:              xxhash: 3.4.1
2024-05-01 18:17:40,672:INFO:           wurlitzer: Not installed
2024-05-01 18:17:40,672:INFO:PyCaret optional dependencies:
2024-05-01 18:17:40,695:INFO:                shap: Not installed
2024-05-01 18:17:40,695:INFO:           interpret: Not installed
2024-05-01 18:17:40,695:INFO:                umap: Not installed
2024-05-01 18:17:40,695:INFO:     ydata_profiling: Not installed
2024-05-01 18:17:40,695:INFO:  explainerdashboard: Not installed
2024-05-01 18:17:40,695:INFO:             autoviz: Not installed
2024-05-01 18:17:40,695:INFO:           fairlearn: Not installed
2024-05-01 18:17:40,695:INFO:          deepchecks: Not installed
2024-05-01 18:17:40,695:INFO:             xgboost: Not installed
2024-05-01 18:17:40,696:INFO:            catboost: Not installed
2024-05-01 18:17:40,696:INFO:              kmodes: Not installed
2024-05-01 18:17:40,696:INFO:             mlxtend: 0.23.0
2024-05-01 18:17:40,696:INFO:       statsforecast: Not installed
2024-05-01 18:17:40,696:INFO:        tune_sklearn: Not installed
2024-05-01 18:17:40,696:INFO:                 ray: Not installed
2024-05-01 18:17:40,696:INFO:            hyperopt: Not installed
2024-05-01 18:17:40,696:INFO:              optuna: Not installed
2024-05-01 18:17:40,696:INFO:               skopt: Not installed
2024-05-01 18:17:40,696:INFO:              mlflow: Not installed
2024-05-01 18:17:40,696:INFO:              gradio: Not installed
2024-05-01 18:17:40,696:INFO:             fastapi: Not installed
2024-05-01 18:17:40,696:INFO:             uvicorn: Not installed
2024-05-01 18:17:40,696:INFO:              m2cgen: Not installed
2024-05-01 18:17:40,696:INFO:           evidently: Not installed
2024-05-01 18:17:40,696:INFO:               fugue: Not installed
2024-05-01 18:17:40,696:INFO:           streamlit: Not installed
2024-05-01 18:17:40,696:INFO:             prophet: Not installed
2024-05-01 18:17:40,696:INFO:None
2024-05-01 18:17:40,696:INFO:Set up data.
2024-05-01 18:17:40,709:INFO:Set up folding strategy.
2024-05-01 18:17:40,709:INFO:Set up train/test split.
2024-05-01 18:17:40,714:INFO:Set up index.
2024-05-01 18:17:40,714:INFO:Assigning column types.
2024-05-01 18:17:40,716:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-01 18:17:40,789:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-01 18:17:40,792:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-01 18:17:40,871:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:17:40,871:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:17:40,947:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-01 18:17:40,947:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-01 18:17:40,992:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:17:40,992:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:17:40,992:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-01 18:17:41,068:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-01 18:17:41,112:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:17:41,113:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:17:41,184:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-01 18:17:41,228:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:17:41,228:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:17:41,228:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-01 18:17:41,346:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:17:41,346:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:17:41,467:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:17:41,467:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:17:41,474:INFO:Preparing preprocessing pipeline...
2024-05-01 18:17:41,477:INFO:Set up simple imputation.
2024-05-01 18:17:41,477:INFO:Set up feature normalization.
2024-05-01 18:17:41,504:INFO:Finished creating preprocessing pipeline.
2024-05-01 18:17:41,516:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\hp\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'BusinessTravel',
                                             'DailyRate', 'Department',
                                             'DistanceFromHome', 'Education',
                                             'EducationField', 'EmployeeCount',
                                             'EnvironmentSatisfaction',
                                             'Gender', 'HourlyRate',
                                             'JobInvolvement', 'JobLevel',
                                             'JobRole', 'JobSati...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-05-01 18:17:41,516:INFO:Creating final display dataframe.
2024-05-01 18:17:41,604:INFO:Setup _display_container:                     Description             Value
0                    Session id              2024
1                        Target         Attrition
2                   Target type            Binary
3           Original data shape         (100, 34)
4        Transformed data shape         (100, 34)
5   Transformed train set shape          (75, 34)
6    Transformed test set shape          (25, 34)
7              Numeric features                33
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              3dde
2024-05-01 18:17:41,736:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:17:41,736:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:17:41,855:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:17:41,855:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:17:41,857:INFO:setup() successfully completed in 1.77s...............
2024-05-01 18:17:41,870:INFO:gpu_param set to False
2024-05-01 18:17:42,000:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:17:42,001:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:17:42,120:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:17:42,121:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:17:42,137:INFO:Initializing create_model()
2024-05-01 18:17:42,137:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023023996190>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 18:17:42,137:INFO:Checking exceptions
2024-05-01 18:17:42,175:INFO:Importing libraries
2024-05-01 18:17:42,175:INFO:Copying training dataset
2024-05-01 18:17:42,180:INFO:Defining folds
2024-05-01 18:17:42,180:INFO:Declaring metric variables
2024-05-01 18:17:42,186:INFO:Importing untrained model
2024-05-01 18:17:42,193:INFO:Random Forest Classifier Imported successfully
2024-05-01 18:17:42,204:INFO:Starting cross validation
2024-05-01 18:17:42,206:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 18:17:51,322:INFO:Calculating mean and std
2024-05-01 18:17:51,326:INFO:Creating metrics dataframe
2024-05-01 18:17:51,336:INFO:Finalizing model
2024-05-01 18:17:51,584:INFO:Uploading results into container
2024-05-01 18:17:51,585:INFO:Uploading model into container now
2024-05-01 18:17:51,598:INFO:_master_model_container: 1
2024-05-01 18:17:51,598:INFO:_display_container: 2
2024-05-01 18:17:51,598:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False)
2024-05-01 18:17:51,598:INFO:create_model() successfully completed......................................
2024-05-01 18:17:51,696:INFO:Initializing predict_model()
2024-05-01 18:17:51,696:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023023996190>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002302D0B3160>)
2024-05-01 18:17:51,696:INFO:Checking exceptions
2024-05-01 18:17:51,696:INFO:Preloading libraries
2024-05-01 18:17:51,958:INFO:Initializing tune_model()
2024-05-01 18:17:51,958:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023023996190>)
2024-05-01 18:17:51,958:INFO:Checking exceptions
2024-05-01 18:17:52,004:INFO:Copying training dataset
2024-05-01 18:17:52,009:INFO:Checking base model
2024-05-01 18:17:52,010:INFO:Base model : Random Forest Classifier
2024-05-01 18:17:52,016:INFO:Declaring metric variables
2024-05-01 18:17:52,021:INFO:Defining Hyperparameters
2024-05-01 18:17:52,100:INFO:Tuning with n_jobs=-1
2024-05-01 18:17:52,100:INFO:Initializing RandomizedSearchCV
2024-05-01 18:18:00,268:INFO:best_params: {'actual_estimator__n_estimators': 160, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.001, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 5, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': True}
2024-05-01 18:18:00,269:INFO:Hyperparameter search completed
2024-05-01 18:18:00,269:INFO:SubProcess create_model() called ==================================
2024-05-01 18:18:00,270:INFO:Initializing create_model()
2024-05-01 18:18:00,270:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023023996190>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002302CD297F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 160, 'min_samples_split': 2, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.001, 'max_features': 'log2', 'max_depth': 5, 'criterion': 'entropy', 'class_weight': {}, 'bootstrap': True})
2024-05-01 18:18:00,270:INFO:Checking exceptions
2024-05-01 18:18:00,270:INFO:Importing libraries
2024-05-01 18:18:00,270:INFO:Copying training dataset
2024-05-01 18:18:00,274:INFO:Defining folds
2024-05-01 18:18:00,274:INFO:Declaring metric variables
2024-05-01 18:18:00,278:INFO:Importing untrained model
2024-05-01 18:18:00,279:INFO:Declaring custom model
2024-05-01 18:18:00,283:INFO:Random Forest Classifier Imported successfully
2024-05-01 18:18:00,293:INFO:Starting cross validation
2024-05-01 18:18:00,294:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 18:18:01,112:INFO:Calculating mean and std
2024-05-01 18:18:01,114:INFO:Creating metrics dataframe
2024-05-01 18:18:01,120:INFO:Finalizing model
2024-05-01 18:18:01,444:INFO:Uploading results into container
2024-05-01 18:18:01,445:INFO:Uploading model into container now
2024-05-01 18:18:01,445:INFO:_master_model_container: 2
2024-05-01 18:18:01,445:INFO:_display_container: 4
2024-05-01 18:18:01,446:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=5, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.001, min_samples_leaf=3,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=160, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False)
2024-05-01 18:18:01,446:INFO:create_model() successfully completed......................................
2024-05-01 18:18:01,524:INFO:SubProcess create_model() end ==================================
2024-05-01 18:18:01,524:INFO:choose_better activated
2024-05-01 18:18:01,528:INFO:SubProcess create_model() called ==================================
2024-05-01 18:18:01,529:INFO:Initializing create_model()
2024-05-01 18:18:01,529:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023023996190>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 18:18:01,529:INFO:Checking exceptions
2024-05-01 18:18:01,531:INFO:Importing libraries
2024-05-01 18:18:01,531:INFO:Copying training dataset
2024-05-01 18:18:01,535:INFO:Defining folds
2024-05-01 18:18:01,535:INFO:Declaring metric variables
2024-05-01 18:18:01,535:INFO:Importing untrained model
2024-05-01 18:18:01,535:INFO:Declaring custom model
2024-05-01 18:18:01,536:INFO:Random Forest Classifier Imported successfully
2024-05-01 18:18:01,537:INFO:Starting cross validation
2024-05-01 18:18:01,538:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 18:18:02,140:INFO:Calculating mean and std
2024-05-01 18:18:02,141:INFO:Creating metrics dataframe
2024-05-01 18:18:02,144:INFO:Finalizing model
2024-05-01 18:18:02,350:INFO:Uploading results into container
2024-05-01 18:18:02,351:INFO:Uploading model into container now
2024-05-01 18:18:02,351:INFO:_master_model_container: 3
2024-05-01 18:18:02,351:INFO:_display_container: 5
2024-05-01 18:18:02,352:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False)
2024-05-01 18:18:02,352:INFO:create_model() successfully completed......................................
2024-05-01 18:18:02,413:INFO:SubProcess create_model() end ==================================
2024-05-01 18:18:02,413:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False) result for Accuracy is 0.7411
2024-05-01 18:18:02,414:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=5, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.001, min_samples_leaf=3,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=160, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False) result for Accuracy is 0.7304
2024-05-01 18:18:02,414:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False) is best model
2024-05-01 18:18:02,414:INFO:choose_better completed
2024-05-01 18:18:02,414:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-01 18:18:02,425:INFO:_master_model_container: 3
2024-05-01 18:18:02,425:INFO:_display_container: 4
2024-05-01 18:18:02,426:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False)
2024-05-01 18:18:02,426:INFO:tune_model() successfully completed......................................
2024-05-01 18:18:02,510:INFO:Initializing predict_model()
2024-05-01 18:18:02,510:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023023996190>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002302D0B33A0>)
2024-05-01 18:18:02,510:INFO:Checking exceptions
2024-05-01 18:18:02,511:INFO:Preloading libraries
2024-05-01 18:18:02,730:INFO:Initializing plot_model()
2024-05-01 18:18:02,730:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023023996190>, system=True)
2024-05-01 18:18:02,730:INFO:Checking exceptions
2024-05-01 18:18:02,763:INFO:Preloading libraries
2024-05-01 18:18:02,776:INFO:Copying training dataset
2024-05-01 18:18:02,776:INFO:Plot type: feature
2024-05-01 18:18:02,776:WARNING:No coef_ found. Trying feature_importances_
2024-05-01 18:18:02,971:INFO:Visual Rendered Successfully
2024-05-01 18:18:03,046:INFO:plot_model() successfully completed......................................
2024-05-01 18:18:03,103:INFO:Initializing save_model()
2024-05-01 18:18:03,104:INFO:save_model(model=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False), model_name=RF_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\hp\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'BusinessTravel',
                                             'DailyRate', 'Department',
                                             'DistanceFromHome', 'Education',
                                             'EducationField', 'EmployeeCount',
                                             'EnvironmentSatisfaction',
                                             'Gender', 'HourlyRate',
                                             'JobInvolvement', 'JobLevel',
                                             'JobRole', 'JobSati...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-05-01 18:18:03,104:INFO:Adding model into prep_pipe
2024-05-01 18:18:03,159:INFO:RF_model.pkl saved in current working directory
2024-05-01 18:18:03,164:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'BusinessTravel',
                                             'DailyRate', 'Department',
                                             'DistanceFromHome', 'Education',
                                             'EducationField', 'EmployeeCount',
                                             'EnvironmentSatisfaction',
                                             'Gender', 'HourlyRate',
                                             'JobInvolvement', 'JobLevel',
                                             'JobRole', 'JobSatisfaction',
                                             'MaritalStatus', 'MonthlyInc...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=2024, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-05-01 18:18:03,164:INFO:save_model() successfully completed......................................
2024-05-01 18:18:03,252:INFO:Initializing finalize_model()
2024-05-01 18:18:03,253:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023023996190>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-01 18:18:03,254:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False)
2024-05-01 18:18:03,260:INFO:Initializing create_model()
2024-05-01 18:18:03,261:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023023996190>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 18:18:03,261:INFO:Checking exceptions
2024-05-01 18:18:03,263:INFO:Importing libraries
2024-05-01 18:18:03,264:INFO:Copying training dataset
2024-05-01 18:18:03,264:INFO:Defining folds
2024-05-01 18:18:03,264:INFO:Declaring metric variables
2024-05-01 18:18:03,264:INFO:Importing untrained model
2024-05-01 18:18:03,265:INFO:Declaring custom model
2024-05-01 18:18:03,266:INFO:Random Forest Classifier Imported successfully
2024-05-01 18:18:03,268:INFO:Cross validation set to False
2024-05-01 18:18:03,268:INFO:Fitting Model
2024-05-01 18:18:03,494:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'BusinessTravel',
                                             'DailyRate', 'Department',
                                             'DistanceFromHome', 'Education',
                                             'EducationField', 'EmployeeCount',
                                             'EnvironmentSatisfaction',
                                             'Gender', 'HourlyRate',
                                             'JobInvolvement', 'JobLevel',
                                             'JobRole', 'JobSatisfaction',
                                             'MaritalStatus', 'MonthlyInc...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=2024, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-05-01 18:18:03,494:INFO:create_model() successfully completed......................................
2024-05-01 18:18:03,569:INFO:_master_model_container: 3
2024-05-01 18:18:03,569:INFO:_display_container: 5
2024-05-01 18:18:03,575:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'BusinessTravel',
                                             'DailyRate', 'Department',
                                             'DistanceFromHome', 'Education',
                                             'EducationField', 'EmployeeCount',
                                             'EnvironmentSatisfaction',
                                             'Gender', 'HourlyRate',
                                             'JobInvolvement', 'JobLevel',
                                             'JobRole', 'JobSatisfaction',
                                             'MaritalStatus', 'MonthlyInc...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=2024, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-05-01 18:18:03,575:INFO:finalize_model() successfully completed......................................
2024-05-01 18:18:03,685:ERROR:
'fastapi' is a soft dependency and not included in the pycaret installation. Please run: `pip install fastapi` to install.
Alternately, you can install this by running `pip install pycaret[mlops]`
NoneType: None
2024-05-01 18:19:42,111:ERROR:
'fastapi' is a soft dependency and not included in the pycaret installation. Please run: `pip install fastapi` to install.
Alternately, you can install this by running `pip install pycaret[mlops]`
NoneType: None
2024-05-01 18:20:03,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 18:20:03,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 18:20:03,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 18:20:03,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 18:20:04,376:INFO:PyCaret ClassificationExperiment
2024-05-01 18:20:04,376:INFO:Logging name: clf-default-name
2024-05-01 18:20:04,376:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-05-01 18:20:04,376:INFO:version 3.3.1
2024-05-01 18:20:04,376:INFO:Initializing setup()
2024-05-01 18:20:04,376:INFO:self.USI: e87f
2024-05-01 18:20:04,376:INFO:self._variable_keys: {'gpu_param', '_available_plots', 'X_test', 'X', 'y_test', 'html_param', 'fold_shuffle_param', 'fold_groups_param', 'idx', 'X_train', 'memory', 'gpu_n_jobs_param', 'fix_imbalance', 'is_multiclass', '_ml_usecase', 'log_plots_param', 'pipeline', 'target_param', 'y_train', 'seed', 'data', 'exp_id', 'exp_name_log', 'y', 'logging_param', 'fold_generator', 'n_jobs_param', 'USI'}
2024-05-01 18:20:04,376:INFO:Checking environment
2024-05-01 18:20:04,376:INFO:python_version: 3.9.13
2024-05-01 18:20:04,376:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2024-05-01 18:20:04,376:INFO:machine: AMD64
2024-05-01 18:20:04,376:INFO:platform: Windows-10-10.0.19045-SP0
2024-05-01 18:20:04,376:INFO:Memory: svmem(total=8246136832, available=2165075968, percent=73.7, used=6081060864, free=2165075968)
2024-05-01 18:20:04,376:INFO:Physical Core: 10
2024-05-01 18:20:04,377:INFO:Logical Core: 12
2024-05-01 18:20:04,377:INFO:Checking libraries
2024-05-01 18:20:04,377:INFO:System:
2024-05-01 18:20:04,377:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2024-05-01 18:20:04,377:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2024-05-01 18:20:04,377:INFO:   machine: Windows-10-10.0.19045-SP0
2024-05-01 18:20:04,377:INFO:PyCaret required dependencies:
2024-05-01 18:20:04,570:INFO:                 pip: 22.2.2
2024-05-01 18:20:04,571:INFO:          setuptools: 63.4.1
2024-05-01 18:20:04,571:INFO:             pycaret: 3.3.1
2024-05-01 18:20:04,571:INFO:             IPython: 7.31.1
2024-05-01 18:20:04,571:INFO:          ipywidgets: 7.6.5
2024-05-01 18:20:04,571:INFO:                tqdm: 4.64.1
2024-05-01 18:20:04,571:INFO:               numpy: 1.21.5
2024-05-01 18:20:04,571:INFO:              pandas: 1.4.4
2024-05-01 18:20:04,571:INFO:              jinja2: 2.11.3
2024-05-01 18:20:04,571:INFO:               scipy: 1.9.1
2024-05-01 18:20:04,571:INFO:              joblib: 1.1.0
2024-05-01 18:20:04,571:INFO:             sklearn: 1.0.2
2024-05-01 18:20:04,571:INFO:                pyod: 1.1.3
2024-05-01 18:20:04,571:INFO:            imblearn: 0.12.2
2024-05-01 18:20:04,571:INFO:   category_encoders: 2.6.3
2024-05-01 18:20:04,571:INFO:            lightgbm: 4.3.0
2024-05-01 18:20:04,571:INFO:               numba: 0.55.1
2024-05-01 18:20:04,571:INFO:            requests: 2.28.1
2024-05-01 18:20:04,571:INFO:          matplotlib: 3.5.2
2024-05-01 18:20:04,572:INFO:          scikitplot: 0.3.7
2024-05-01 18:20:04,572:INFO:         yellowbrick: 1.5
2024-05-01 18:20:04,572:INFO:              plotly: 5.9.0
2024-05-01 18:20:04,572:INFO:    plotly-resampler: Not installed
2024-05-01 18:20:04,572:INFO:             kaleido: 0.2.1
2024-05-01 18:20:04,572:INFO:           schemdraw: 0.15
2024-05-01 18:20:04,572:INFO:         statsmodels: 0.13.2
2024-05-01 18:20:04,572:INFO:              sktime: 0.26.0
2024-05-01 18:20:04,572:INFO:               tbats: 1.1.3
2024-05-01 18:20:04,572:INFO:            pmdarima: 2.0.4
2024-05-01 18:20:04,572:INFO:              psutil: 5.9.0
2024-05-01 18:20:04,572:INFO:          markupsafe: 2.0.1
2024-05-01 18:20:04,572:INFO:             pickle5: Not installed
2024-05-01 18:20:04,572:INFO:         cloudpickle: 2.0.0
2024-05-01 18:20:04,572:INFO:         deprecation: 2.1.0
2024-05-01 18:20:04,572:INFO:              xxhash: 3.4.1
2024-05-01 18:20:04,572:INFO:           wurlitzer: Not installed
2024-05-01 18:20:04,572:INFO:PyCaret optional dependencies:
2024-05-01 18:20:05,157:INFO:                shap: Not installed
2024-05-01 18:20:05,157:INFO:           interpret: Not installed
2024-05-01 18:20:05,157:INFO:                umap: Not installed
2024-05-01 18:20:05,157:INFO:     ydata_profiling: Not installed
2024-05-01 18:20:05,157:INFO:  explainerdashboard: Not installed
2024-05-01 18:20:05,157:INFO:             autoviz: Not installed
2024-05-01 18:20:05,157:INFO:           fairlearn: Not installed
2024-05-01 18:20:05,157:INFO:          deepchecks: Not installed
2024-05-01 18:20:05,157:INFO:             xgboost: Not installed
2024-05-01 18:20:05,157:INFO:            catboost: Not installed
2024-05-01 18:20:05,157:INFO:              kmodes: Not installed
2024-05-01 18:20:05,158:INFO:             mlxtend: 0.23.0
2024-05-01 18:20:05,158:INFO:       statsforecast: Not installed
2024-05-01 18:20:05,158:INFO:        tune_sklearn: Not installed
2024-05-01 18:20:05,158:INFO:                 ray: Not installed
2024-05-01 18:20:05,158:INFO:            hyperopt: Not installed
2024-05-01 18:20:05,158:INFO:              optuna: Not installed
2024-05-01 18:20:05,158:INFO:               skopt: Not installed
2024-05-01 18:20:05,158:INFO:              mlflow: Not installed
2024-05-01 18:20:05,158:INFO:              gradio: Not installed
2024-05-01 18:20:05,158:INFO:             fastapi: 0.110.3
2024-05-01 18:20:05,158:INFO:             uvicorn: 0.29.0
2024-05-01 18:20:05,158:INFO:              m2cgen: Not installed
2024-05-01 18:20:05,158:INFO:           evidently: Not installed
2024-05-01 18:20:05,158:INFO:               fugue: Not installed
2024-05-01 18:20:05,158:INFO:           streamlit: Not installed
2024-05-01 18:20:05,158:INFO:             prophet: Not installed
2024-05-01 18:20:05,158:INFO:None
2024-05-01 18:20:05,158:INFO:Set up data.
2024-05-01 18:20:05,168:INFO:Set up folding strategy.
2024-05-01 18:20:05,168:INFO:Set up train/test split.
2024-05-01 18:20:05,172:INFO:Set up index.
2024-05-01 18:20:05,172:INFO:Assigning column types.
2024-05-01 18:20:05,175:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-05-01 18:20:05,245:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-01 18:20:05,246:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-01 18:20:05,296:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:20:05,297:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:20:05,367:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-05-01 18:20:05,368:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-01 18:20:05,410:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:20:05,410:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:20:05,410:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-05-01 18:20:05,483:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-01 18:20:05,527:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:20:05,528:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:20:05,631:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-05-01 18:20:05,683:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:20:05,684:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:20:05,684:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-05-01 18:20:05,796:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:20:05,797:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:20:05,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:20:05,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:20:05,913:INFO:Preparing preprocessing pipeline...
2024-05-01 18:20:05,914:INFO:Set up simple imputation.
2024-05-01 18:20:05,915:INFO:Set up feature normalization.
2024-05-01 18:20:05,941:INFO:Finished creating preprocessing pipeline.
2024-05-01 18:20:05,947:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\hp\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'BusinessTravel',
                                             'DailyRate', 'Department',
                                             'DistanceFromHome', 'Education',
                                             'EducationField', 'EmployeeCount',
                                             'EnvironmentSatisfaction',
                                             'Gender', 'HourlyRate',
                                             'JobInvolvement', 'JobLevel',
                                             'JobRole', 'JobSati...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-05-01 18:20:05,947:INFO:Creating final display dataframe.
2024-05-01 18:20:06,029:INFO:Setup _display_container:                     Description             Value
0                    Session id              2024
1                        Target         Attrition
2                   Target type            Binary
3           Original data shape         (100, 34)
4        Transformed data shape         (100, 34)
5   Transformed train set shape          (75, 34)
6    Transformed test set shape          (25, 34)
7              Numeric features                33
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              e87f
2024-05-01 18:20:06,174:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:20:06,174:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:20:06,296:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:20:06,296:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:20:06,298:INFO:setup() successfully completed in 1.93s...............
2024-05-01 18:20:06,306:INFO:gpu_param set to False
2024-05-01 18:20:06,436:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:20:06,438:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:20:06,557:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:20:06,557:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-05-01 18:20:06,569:INFO:Initializing create_model()
2024-05-01 18:20:06,569:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246187DEBB0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 18:20:06,569:INFO:Checking exceptions
2024-05-01 18:20:06,605:INFO:Importing libraries
2024-05-01 18:20:06,605:INFO:Copying training dataset
2024-05-01 18:20:06,613:INFO:Defining folds
2024-05-01 18:20:06,614:INFO:Declaring metric variables
2024-05-01 18:20:06,621:INFO:Importing untrained model
2024-05-01 18:20:06,625:INFO:Random Forest Classifier Imported successfully
2024-05-01 18:20:06,634:INFO:Starting cross validation
2024-05-01 18:20:06,635:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 18:20:14,136:INFO:Calculating mean and std
2024-05-01 18:20:14,138:INFO:Creating metrics dataframe
2024-05-01 18:20:14,146:INFO:Finalizing model
2024-05-01 18:20:14,348:INFO:Uploading results into container
2024-05-01 18:20:14,349:INFO:Uploading model into container now
2024-05-01 18:20:14,361:INFO:_master_model_container: 1
2024-05-01 18:20:14,361:INFO:_display_container: 2
2024-05-01 18:20:14,362:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False)
2024-05-01 18:20:14,362:INFO:create_model() successfully completed......................................
2024-05-01 18:20:14,491:INFO:Initializing predict_model()
2024-05-01 18:20:14,491:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246187DEBB0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002463B189670>)
2024-05-01 18:20:14,491:INFO:Checking exceptions
2024-05-01 18:20:14,491:INFO:Preloading libraries
2024-05-01 18:20:14,738:INFO:Initializing tune_model()
2024-05-01 18:20:14,738:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246187DEBB0>)
2024-05-01 18:20:14,738:INFO:Checking exceptions
2024-05-01 18:20:14,783:INFO:Copying training dataset
2024-05-01 18:20:14,787:INFO:Checking base model
2024-05-01 18:20:14,787:INFO:Base model : Random Forest Classifier
2024-05-01 18:20:14,794:INFO:Declaring metric variables
2024-05-01 18:20:14,800:INFO:Defining Hyperparameters
2024-05-01 18:20:14,890:INFO:Tuning with n_jobs=-1
2024-05-01 18:20:14,890:INFO:Initializing RandomizedSearchCV
2024-05-01 18:20:23,433:INFO:best_params: {'actual_estimator__n_estimators': 160, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.001, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 5, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': True}
2024-05-01 18:20:23,435:INFO:Hyperparameter search completed
2024-05-01 18:20:23,435:INFO:SubProcess create_model() called ==================================
2024-05-01 18:20:23,437:INFO:Initializing create_model()
2024-05-01 18:20:23,437:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246187DEBB0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002463B2A12E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 160, 'min_samples_split': 2, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.001, 'max_features': 'log2', 'max_depth': 5, 'criterion': 'entropy', 'class_weight': {}, 'bootstrap': True})
2024-05-01 18:20:23,437:INFO:Checking exceptions
2024-05-01 18:20:23,437:INFO:Importing libraries
2024-05-01 18:20:23,437:INFO:Copying training dataset
2024-05-01 18:20:23,442:INFO:Defining folds
2024-05-01 18:20:23,442:INFO:Declaring metric variables
2024-05-01 18:20:23,446:INFO:Importing untrained model
2024-05-01 18:20:23,446:INFO:Declaring custom model
2024-05-01 18:20:23,452:INFO:Random Forest Classifier Imported successfully
2024-05-01 18:20:23,462:INFO:Starting cross validation
2024-05-01 18:20:23,464:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 18:20:24,249:INFO:Calculating mean and std
2024-05-01 18:20:24,252:INFO:Creating metrics dataframe
2024-05-01 18:20:24,260:INFO:Finalizing model
2024-05-01 18:20:24,575:INFO:Uploading results into container
2024-05-01 18:20:24,576:INFO:Uploading model into container now
2024-05-01 18:20:24,576:INFO:_master_model_container: 2
2024-05-01 18:20:24,576:INFO:_display_container: 4
2024-05-01 18:20:24,577:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=5, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.001, min_samples_leaf=3,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=160, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False)
2024-05-01 18:20:24,577:INFO:create_model() successfully completed......................................
2024-05-01 18:20:24,664:INFO:SubProcess create_model() end ==================================
2024-05-01 18:20:24,664:INFO:choose_better activated
2024-05-01 18:20:24,668:INFO:SubProcess create_model() called ==================================
2024-05-01 18:20:24,669:INFO:Initializing create_model()
2024-05-01 18:20:24,669:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246187DEBB0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 18:20:24,669:INFO:Checking exceptions
2024-05-01 18:20:24,671:INFO:Importing libraries
2024-05-01 18:20:24,671:INFO:Copying training dataset
2024-05-01 18:20:24,675:INFO:Defining folds
2024-05-01 18:20:24,675:INFO:Declaring metric variables
2024-05-01 18:20:24,675:INFO:Importing untrained model
2024-05-01 18:20:24,675:INFO:Declaring custom model
2024-05-01 18:20:24,676:INFO:Random Forest Classifier Imported successfully
2024-05-01 18:20:24,676:INFO:Starting cross validation
2024-05-01 18:20:24,677:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-05-01 18:20:25,429:INFO:Calculating mean and std
2024-05-01 18:20:25,430:INFO:Creating metrics dataframe
2024-05-01 18:20:25,434:INFO:Finalizing model
2024-05-01 18:20:25,678:INFO:Uploading results into container
2024-05-01 18:20:25,679:INFO:Uploading model into container now
2024-05-01 18:20:25,680:INFO:_master_model_container: 3
2024-05-01 18:20:25,680:INFO:_display_container: 5
2024-05-01 18:20:25,680:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False)
2024-05-01 18:20:25,680:INFO:create_model() successfully completed......................................
2024-05-01 18:20:25,769:INFO:SubProcess create_model() end ==================================
2024-05-01 18:20:25,770:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False) result for Accuracy is 0.7411
2024-05-01 18:20:25,770:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight={},
                       criterion='entropy', max_depth=5, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.001, min_samples_leaf=3,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=160, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False) result for Accuracy is 0.7304
2024-05-01 18:20:25,771:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False) is best model
2024-05-01 18:20:25,771:INFO:choose_better completed
2024-05-01 18:20:25,771:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-05-01 18:20:25,785:INFO:_master_model_container: 3
2024-05-01 18:20:25,785:INFO:_display_container: 4
2024-05-01 18:20:25,786:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False)
2024-05-01 18:20:25,786:INFO:tune_model() successfully completed......................................
2024-05-01 18:20:25,884:INFO:Initializing predict_model()
2024-05-01 18:20:25,884:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246187DEBB0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002463A17BB80>)
2024-05-01 18:20:25,884:INFO:Checking exceptions
2024-05-01 18:20:25,884:INFO:Preloading libraries
2024-05-01 18:20:26,148:INFO:Initializing plot_model()
2024-05-01 18:20:26,149:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246187DEBB0>, system=True)
2024-05-01 18:20:26,149:INFO:Checking exceptions
2024-05-01 18:20:26,186:INFO:Preloading libraries
2024-05-01 18:20:26,196:INFO:Copying training dataset
2024-05-01 18:20:26,197:INFO:Plot type: feature
2024-05-01 18:20:26,197:WARNING:No coef_ found. Trying feature_importances_
2024-05-01 18:20:26,414:INFO:Visual Rendered Successfully
2024-05-01 18:20:26,487:INFO:plot_model() successfully completed......................................
2024-05-01 18:20:26,543:INFO:Initializing save_model()
2024-05-01 18:20:26,544:INFO:save_model(model=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False), model_name=RF_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\hp\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'BusinessTravel',
                                             'DailyRate', 'Department',
                                             'DistanceFromHome', 'Education',
                                             'EducationField', 'EmployeeCount',
                                             'EnvironmentSatisfaction',
                                             'Gender', 'HourlyRate',
                                             'JobInvolvement', 'JobLevel',
                                             'JobRole', 'JobSati...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-05-01 18:20:26,544:INFO:Adding model into prep_pipe
2024-05-01 18:20:26,611:INFO:RF_model.pkl saved in current working directory
2024-05-01 18:20:26,621:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'BusinessTravel',
                                             'DailyRate', 'Department',
                                             'DistanceFromHome', 'Education',
                                             'EducationField', 'EmployeeCount',
                                             'EnvironmentSatisfaction',
                                             'Gender', 'HourlyRate',
                                             'JobInvolvement', 'JobLevel',
                                             'JobRole', 'JobSatisfaction',
                                             'MaritalStatus', 'MonthlyInc...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=2024, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-05-01 18:20:26,621:INFO:save_model() successfully completed......................................
2024-05-01 18:20:26,724:INFO:Initializing finalize_model()
2024-05-01 18:20:26,724:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246187DEBB0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-05-01 18:20:26,725:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False)
2024-05-01 18:20:26,729:INFO:Initializing create_model()
2024-05-01 18:20:26,729:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000246187DEBB0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2024, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-05-01 18:20:26,729:INFO:Checking exceptions
2024-05-01 18:20:26,734:INFO:Importing libraries
2024-05-01 18:20:26,734:INFO:Copying training dataset
2024-05-01 18:20:26,734:INFO:Defining folds
2024-05-01 18:20:26,734:INFO:Declaring metric variables
2024-05-01 18:20:26,735:INFO:Importing untrained model
2024-05-01 18:20:26,735:INFO:Declaring custom model
2024-05-01 18:20:26,735:INFO:Random Forest Classifier Imported successfully
2024-05-01 18:20:26,737:INFO:Cross validation set to False
2024-05-01 18:20:26,737:INFO:Fitting Model
2024-05-01 18:20:26,929:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'BusinessTravel',
                                             'DailyRate', 'Department',
                                             'DistanceFromHome', 'Education',
                                             'EducationField', 'EmployeeCount',
                                             'EnvironmentSatisfaction',
                                             'Gender', 'HourlyRate',
                                             'JobInvolvement', 'JobLevel',
                                             'JobRole', 'JobSatisfaction',
                                             'MaritalStatus', 'MonthlyInc...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=2024, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-05-01 18:20:26,930:INFO:create_model() successfully completed......................................
2024-05-01 18:20:27,004:INFO:_master_model_container: 3
2024-05-01 18:20:27,004:INFO:_display_container: 5
2024-05-01 18:20:27,009:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'BusinessTravel',
                                             'DailyRate', 'Department',
                                             'DistanceFromHome', 'Education',
                                             'EducationField', 'EmployeeCount',
                                             'EnvironmentSatisfaction',
                                             'Gender', 'HourlyRate',
                                             'JobInvolvement', 'JobLevel',
                                             'JobRole', 'JobSatisfaction',
                                             'MaritalStatus', 'MonthlyInc...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=2024, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-05-01 18:20:27,010:INFO:finalize_model() successfully completed......................................
2024-05-01 18:20:27,114:INFO:Soft dependency imported: fastapi: 0.110.3
2024-05-01 18:20:27,114:INFO:Soft dependency imported: uvicorn: 0.29.0
2024-05-01 18:20:27,114:INFO:Soft dependency imported: pydantic: 1.10.12
2024-05-01 18:20:27,127:INFO:Initializing save_model()
2024-05-01 18:20:27,127:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'BusinessTravel',
                                             'DailyRate', 'Department',
                                             'DistanceFromHome', 'Education',
                                             'EducationField', 'EmployeeCount',
                                             'EnvironmentSatisfaction',
                                             'Gender', 'HourlyRate',
                                             'JobInvolvement', 'JobLevel',
                                             'JobRole', 'JobSatisfaction',
                                             'MaritalStatus', 'MonthlyInc...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=2024, verbose=0,
                                        warm_start=False))],
         verbose=False), model_name=turnover_api, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\hp\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'BusinessTravel',
                                             'DailyRate', 'Department',
                                             'DistanceFromHome', 'Education',
                                             'EducationField', 'EmployeeCount',
                                             'EnvironmentSatisfaction',
                                             'Gender', 'HourlyRate',
                                             'JobInvolvement', 'JobLevel',
                                             'JobRole', 'JobSati...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-05-01 18:20:27,127:INFO:Adding model into prep_pipe
2024-05-01 18:20:27,127:WARNING:Only Model saved as it was a pipeline.
2024-05-01 18:20:27,169:INFO:turnover_api.pkl saved in current working directory
2024-05-01 18:20:27,175:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'BusinessTravel',
                                             'DailyRate', 'Department',
                                             'DistanceFromHome', 'Education',
                                             'EducationField', 'EmployeeCount',
                                             'EnvironmentSatisfaction',
                                             'Gender', 'HourlyRate',
                                             'JobInvolvement', 'JobLevel',
                                             'JobRole', 'JobSatisfaction',
                                             'MaritalStatus', 'MonthlyInc...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=2024, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-05-01 18:20:27,175:INFO:save_model() successfully completed......................................
2024-05-01 18:46:19,679:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 18:46:19,680:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 18:46:19,680:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 18:46:19,680:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 18:46:21,709:INFO:Initializing load_model()
2024-05-01 18:46:21,709:INFO:load_model(model_name=turnover_api, platform=None, authentication=None, verbose=True)
2024-05-01 18:46:21,798:WARNING:C:\Users\hp\.conda\envs\turnover\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.2', 'IPython': '8.22.2', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.59.1', 'requests': '2.31.0', 'matplotlib': '3.8.4', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.9', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.3.1', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '2.11.3', 'scipy': '1.9.1', 'joblib': '1.1.0', 'sklearn': '1.0.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2024-05-01 18:48:17,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 18:48:17,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 18:48:17,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 18:48:17,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 18:48:18,493:INFO:Initializing load_model()
2024-05-01 18:48:18,493:INFO:load_model(model_name=turnover_api, platform=None, authentication=None, verbose=True)
2024-05-01 18:48:18,568:WARNING:C:\Users\hp\.conda\envs\turnover\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.2', 'IPython': '8.22.2', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.59.1', 'requests': '2.31.0', 'matplotlib': '3.8.4', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.9', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.3.1', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '2.11.3', 'scipy': '1.9.1', 'joblib': '1.1.0', 'sklearn': '1.0.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2024-05-01 19:58:47,535:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 19:58:47,535:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 19:58:47,535:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 19:58:47,535:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 19:58:49,826:INFO:Initializing load_model()
2024-05-01 19:58:49,827:INFO:load_model(model_name=turnover_api, platform=None, authentication=None, verbose=True)
2024-05-01 19:58:49,906:WARNING:C:\Users\hp\.conda\envs\turnover\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.2', 'IPython': '8.22.2', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.59.1', 'requests': '2.31.0', 'matplotlib': '3.8.4', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.9', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.3.1', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '2.11.3', 'scipy': '1.9.1', 'joblib': '1.1.0', 'sklearn': '1.0.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2024-05-01 19:58:49,941:INFO:Initializing predict_model()
2024-05-01 19:58:49,941:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020910F716D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Age', 'BusinessTravel',
                                             'DailyRate', 'Department',
                                             'DistanceFromHome', 'Education',
                                             'EducationField', 'EmployeeCount',
                                             'EnvironmentSatisfaction',
                                             'Gender', 'HourlyRate',
                                             'JobInvolvement', 'JobLevel',
                                             'JobRole', 'JobSatisfaction',
                                             'MaritalStatus', 'MonthlyIncome',
                                             'Monthly...
                                             'TotalWorkingYears',
                                             'TrainingTimesLastYear',
                                             'WorkLifeBalance',
                                             'YearsAtCompany', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002091102C400>)
2024-05-01 19:58:49,943:INFO:Checking exceptions
2024-05-01 19:58:49,943:INFO:Preloading libraries
2024-05-01 19:58:49,945:INFO:Set up data.
2024-05-01 19:58:49,957:INFO:Set up index.
2024-05-01 19:59:03,713:INFO:Initializing predict_model()
2024-05-01 19:59:03,713:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020910F32850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Age', 'BusinessTravel',
                                             'DailyRate', 'Department',
                                             'DistanceFromHome', 'Education',
                                             'EducationField', 'EmployeeCount',
                                             'EnvironmentSatisfaction',
                                             'Gender', 'HourlyRate',
                                             'JobInvolvement', 'JobLevel',
                                             'JobRole', 'JobSatisfaction',
                                             'MaritalStatus', 'MonthlyIncome',
                                             'Monthly...
                                             'TotalWorkingYears',
                                             'TrainingTimesLastYear',
                                             'WorkLifeBalance',
                                             'YearsAtCompany', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002091102D940>)
2024-05-01 19:59:03,713:INFO:Checking exceptions
2024-05-01 19:59:03,713:INFO:Preloading libraries
2024-05-01 19:59:03,714:INFO:Set up data.
2024-05-01 19:59:03,724:INFO:Set up index.
2024-05-01 20:04:52,845:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 20:04:52,846:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 20:04:52,846:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 20:04:52,846:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 20:04:54,161:INFO:Initializing load_model()
2024-05-01 20:04:54,161:INFO:load_model(model_name=turnover_api, platform=None, authentication=None, verbose=True)
2024-05-01 20:04:54,209:WARNING:C:\Users\hp\.conda\envs\turnover\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.2', 'IPython': '8.22.2', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.59.1', 'requests': '2.31.0', 'matplotlib': '3.8.4', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.9', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.3.1', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '2.11.3', 'scipy': '1.9.1', 'joblib': '1.1.0', 'sklearn': '1.0.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2024-05-01 20:04:54,280:INFO:Initializing predict_model()
2024-05-01 20:04:54,280:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FE3225F490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Age', 'BusinessTravel',
                                             'DailyRate', 'Department',
                                             'DistanceFromHome', 'Education',
                                             'EducationField', 'EmployeeCount',
                                             'EnvironmentSatisfaction',
                                             'Gender', 'HourlyRate',
                                             'JobInvolvement', 'JobLevel',
                                             'JobRole', 'JobSatisfaction',
                                             'MaritalStatus', 'MonthlyIncome',
                                             'Monthly...
                                             'TotalWorkingYears',
                                             'TrainingTimesLastYear',
                                             'WorkLifeBalance',
                                             'YearsAtCompany', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FE32218EA0>)
2024-05-01 20:04:54,280:INFO:Checking exceptions
2024-05-01 20:04:54,280:INFO:Preloading libraries
2024-05-01 20:04:54,281:INFO:Set up data.
2024-05-01 20:04:54,286:INFO:Set up index.
2024-05-01 20:07:59,996:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 20:07:59,998:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 20:07:59,998:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 20:07:59,998:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 20:08:01,774:INFO:Initializing load_model()
2024-05-01 20:08:01,774:INFO:load_model(model_name=turnover_api, platform=None, authentication=None, verbose=True)
2024-05-01 20:08:01,851:WARNING:C:\Users\hp\.conda\envs\turnover\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.2', 'IPython': '8.22.2', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.59.1', 'requests': '2.31.0', 'matplotlib': '3.8.4', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.9', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.3.1', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '2.11.3', 'scipy': '1.9.1', 'joblib': '1.1.0', 'sklearn': '1.0.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2024-05-01 20:08:01,881:INFO:Initializing predict_model()
2024-05-01 20:08:01,882:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001692B3C9050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Age', 'BusinessTravel',
                                             'DailyRate', 'Department',
                                             'DistanceFromHome', 'Education',
                                             'EducationField', 'EmployeeCount',
                                             'EnvironmentSatisfaction',
                                             'Gender', 'HourlyRate',
                                             'JobInvolvement', 'JobLevel',
                                             'JobRole', 'JobSatisfaction',
                                             'MaritalStatus', 'MonthlyIncome',
                                             'Monthly...
                                             'TotalWorkingYears',
                                             'TrainingTimesLastYear',
                                             'WorkLifeBalance',
                                             'YearsAtCompany', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001692B2E31A0>)
2024-05-01 20:08:01,882:INFO:Checking exceptions
2024-05-01 20:08:01,882:INFO:Preloading libraries
2024-05-01 20:08:01,883:INFO:Set up data.
2024-05-01 20:08:01,968:INFO:Set up index.
2024-05-01 20:11:12,902:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 20:11:12,902:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 20:11:12,902:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 20:11:12,902:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 20:11:14,280:INFO:Initializing load_model()
2024-05-01 20:11:14,280:INFO:load_model(model_name=turnover_api, platform=None, authentication=None, verbose=True)
2024-05-01 20:11:14,325:WARNING:C:\Users\hp\.conda\envs\turnover\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.2', 'IPython': '8.22.2', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.59.1', 'requests': '2.31.0', 'matplotlib': '3.8.4', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.9', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.3.1', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '2.11.3', 'scipy': '1.9.1', 'joblib': '1.1.0', 'sklearn': '1.0.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2024-05-01 20:11:14,341:INFO:Initializing predict_model()
2024-05-01 20:11:14,341:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000281D1BD4E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Age', 'BusinessTravel',
                                             'DailyRate', 'Department',
                                             'DistanceFromHome', 'Education',
                                             'EducationField', 'EmployeeCount',
                                             'EnvironmentSatisfaction',
                                             'Gender', 'HourlyRate',
                                             'JobInvolvement', 'JobLevel',
                                             'JobRole', 'JobSatisfaction',
                                             'MaritalStatus', 'MonthlyIncome',
                                             'Monthly...
                                             'TotalWorkingYears',
                                             'TrainingTimesLastYear',
                                             'WorkLifeBalance',
                                             'YearsAtCompany', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000281D1C90CC0>)
2024-05-01 20:11:14,341:INFO:Checking exceptions
2024-05-01 20:11:14,341:INFO:Preloading libraries
2024-05-01 20:11:14,341:INFO:Set up data.
2024-05-01 20:11:14,412:INFO:Set up index.
2024-05-01 20:14:38,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 20:14:38,936:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 20:14:38,936:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 20:14:38,936:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-01 20:14:40,567:INFO:Initializing load_model()
2024-05-01 20:14:40,568:INFO:load_model(model_name=turnover_api, platform=None, authentication=None, verbose=True)
2024-05-01 20:14:40,621:WARNING:C:\Users\hp\.conda\envs\turnover\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.3.2', 'IPython': '8.22.2', 'ipywidgets': '8.1.2', 'tqdm': '4.66.2', 'numpy': '1.25.2', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.59.1', 'requests': '2.31.0', 'matplotlib': '3.8.4', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.22.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.9', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.3.1', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.4.4', 'jinja2': '2.11.3', 'scipy': '1.9.1', 'joblib': '1.1.0', 'sklearn': '1.0.2', 'pyod': '1.1.3', 'imblearn': '0.12.2', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.13.2', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '2.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.13', 'machine': 'AMD64'}}
  warnings.warn(

2024-05-01 20:14:40,705:INFO:Initializing predict_model()
2024-05-01 20:14:40,705:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002388C289250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Age', 'BusinessTravel',
                                             'DailyRate', 'Department',
                                             'DistanceFromHome', 'Education',
                                             'EducationField', 'EmployeeCount',
                                             'EnvironmentSatisfaction',
                                             'Gender', 'HourlyRate',
                                             'JobInvolvement', 'JobLevel',
                                             'JobRole', 'JobSatisfaction',
                                             'MaritalStatus', 'MonthlyIncome',
                                             'Monthly...
                                             'TotalWorkingYears',
                                             'TrainingTimesLastYear',
                                             'WorkLifeBalance',
                                             'YearsAtCompany', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002388C342DE0>)
2024-05-01 20:14:40,705:INFO:Checking exceptions
2024-05-01 20:14:40,705:INFO:Preloading libraries
2024-05-01 20:14:40,705:INFO:Set up data.
2024-05-01 20:14:40,711:INFO:Set up index.
